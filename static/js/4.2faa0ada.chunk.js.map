{"version":3,"sources":["Components/HOC/withAuthRedirect.js","Components/Profile/My posts/MyPosts.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/My posts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/My posts/Post/Post.jsx","Components/Profile/My posts/AddPostForm.jsx","Components/Profile/My posts/MyPosts.jsx","Components/Profile/My posts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","profileAvatar","src","photos","large","userPhoto","userStatus","statusName","aboutMe","href","contacts","facebook","website","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","Preloader","Post","item","message","likesCount","AddPostForm","validationSchema","yup","shape","newPostText","typeError","required","max","initialValues","validateOnBlur","onSubmit","values","setSubmitting","addPost","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","postForm","htmlFor","type","name","placeholder","textInputError","textInput","error","disabled","onClick","MyPosts","memo","postsElement","posts","map","p","id","postsBlock","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/4.2faa0ada.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnetctedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnetctedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3HGKV\",\"posts\":\"MyPosts_posts__33jRf\",\"postForm\":\"MyPosts_postForm__2wiSC\",\"error\":\"MyPosts_error__22yl3\",\"textInputError\":\"MyPosts_textInputError__3Qmki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wall\":\"ProfileInfo_wall__B7ksa\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__SZDqr\",\"profileAvatar\":\"ProfileInfo_profileAvatar__hQtTY\",\"userStatus\":\"ProfileInfo_userStatus__2vpJN\",\"statusName\":\"ProfileInfo_statusName__V0ZUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__31C79\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n            </div>}\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../Assets/Images/User-Icon.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.profileAvatar}>\r\n                    <img src={props.profile.photos.large === null ? userPhoto : null}/>\r\n                </div>\r\n                <div>\r\n                    <div className={s.userStatus}>\r\n                        <b className={s.statusName}>Status:</b>\r\n                        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                    <div>\r\n                        <b>About me:</b> {props.profile.aboutMe}<br/>\r\n                        <b>Contacts:</b><br/>\r\n                        <b>Facebook:</b> <a href=\"\">{props.profile.contacts.facebook}</a><br/>\r\n                        <b>Website:</b> {props.profile.contacts.website}<br/>\r\n\r\n                        <b>Twitter:</b> {props.profile.contacts.twitter}<br/>\r\n                        <b>Instagram:</b> {props.profile.contacts.instagram}<br/>\r\n                        <b>Youtube:</b> {props.profile.contacts.youtube}<br/>\r\n                        <b>Github:</b> {props.profile.contacts.github}<br/>\r\n                        <b>MainLink:</b> {props.profile.contacts.mainLink}<br/>\r\n\r\n                        <b>LookingForAJob:</b> {props.profile.contacts.lookingForAJob}<br/>\r\n                        <b>LookingForAJobDescription:</b> {props.profile.contacts.lookingForAJobDescription}<br/>\r\n\r\n                        <b>FullName:</b> {props.profile.contacts.fullName}<br/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.meme-arsenal.com/memes/b5d2ec8e1ffa887b239fb66a8653dfe6.jpg\"/>\r\n            {props.message}\r\n            <div>\r\n                <button>Like</button> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Formik} from 'formik';\r\nimport s from './MyPosts.module.css'\r\nimport * as yup from 'yup'\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    const validationSchema = yup.object().shape({\r\n        newPostText: yup.string().typeError('It must be a string')\r\n            .required('Required')\r\n            .max(20, 'Too Long!')\r\n    })\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                newPostText: ''\r\n            }}\r\n            validateOnBlur\r\n            onSubmit={(values, {setSubmitting}) => {\r\n                props.addPost(values.newPostText)\r\n            }}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({\r\n                  values, errors, touched,\r\n                  handleChange, handleBlur,\r\n                  isValid, handleSubmit, dirty\r\n              }) => (\r\n                <form className={s.postForm}>\r\n                    <p>\r\n                        <label htmlFor={<code>newPostText</code>}>Post message</label><br/>\r\n                        <input\r\n                            type='text'\r\n                            name='newPostText'\r\n                            placeholder=\"What's new?\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.newPostText}\r\n                            className={\r\n                                errors.newPostText && touched.newPostText\r\n                                    ? `${s.textInputError}`\r\n                                    : `${s.textInput}`\r\n                            }\r\n                        />\r\n                    </p>\r\n                    {touched.newPostText && errors.newPostText && <p className={s.error}> {errors.newPostText} </p>}\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={!isValid || !dirty}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Add post\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddPostForm;","import React from 'react'\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport AddPostForm from \"./AddPostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElement = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>)\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostForm addPost={props.addPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react'\r\nimport {addPostActionCreator} from \"../../../Redux/Profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../Redux/Profile-reducer\"\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        debugger\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(15364)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    isAuth: state.auth.isAuth,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}